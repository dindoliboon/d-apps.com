<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>d-apps.com</title>
    <link>https://d-apps.com/</link>
    <description>Recent content on d-apps.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Aug 2013 00:00:00 -0400</lastBuildDate><atom:link href="https://d-apps.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PowerShell and JSON Web Token Handler</title>
      <link>https://d-apps.com/posts/powershell-and-json-web-token-handler/</link>
      <pubDate>Tue, 13 Aug 2013 00:00:00 -0400</pubDate>
      
      <guid>https://d-apps.com/posts/powershell-and-json-web-token-handler/</guid>
      <description>Yesterday, I&amp;rsquo;ve been trying to to get Google Admin SDK Directory API (which replaces Google Apps Provisioning API) to work with PowerShell and JSON Web Token (JWT) Handler.
Unfortunately, JWT Handler did not like certificate generated by Google APIs console. I kept receiving the following error:
Exception calling &amp;ldquo;WriteToken&amp;rdquo; with &amp;ldquo;1&amp;rdquo; argument(s): &amp;ldquo;Jwt10530: The &amp;lsquo;System.IdentityModel.Tokens.X509AsymmetricSecurityKey&amp;rsquo; for signing cannot be smaller than &amp;lsquo;2048&amp;rsquo; bits. Parameter name: key.KeySize Actual value was 1024.&amp;rdquo;</description>
    </item>
    
    <item>
      <title>Configure Environment Variables</title>
      <link>https://d-apps.com/posts/configure-environment-variables/</link>
      <pubDate>Thu, 16 Feb 2012 00:00:03 -0400</pubDate>
      
      <guid>https://d-apps.com/posts/configure-environment-variables/</guid>
      <description>Note: This post is part of the BCX Getting Started Guide 3.
After you have downloaded and installed Pelles C and BCX, we can configure our system to run BCX or Pelles C in any directory.
To do this, we will bring up the Environment Variables dialog.
Click the Start button.
Type advance, which will search for commands with that text.
Click View advanced system settings.
Click on the Advanced tab.</description>
    </item>
    
    <item>
      <title>Installing BCX</title>
      <link>https://d-apps.com/posts/installing-bcx/</link>
      <pubDate>Thu, 16 Feb 2012 00:00:02 -0400</pubDate>
      
      <guid>https://d-apps.com/posts/installing-bcx/</guid>
      <description>Note: This post is part of the BCX Getting Started Guide 3.
The official BCX distribution package includes examples for Windows GUI, console, dynamic libraries, complete documentation, the BASIC to C translator, and several utilities including a text editor with syntax highlighting.
To get the latest bleeding-edge BCX tools and help files, visit the BCX Basic Forum. You will need an account to access some files. Registration is free.
Download, extract and run the BCX installer.</description>
    </item>
    
    <item>
      <title>Installing Pelles C</title>
      <link>https://d-apps.com/posts/installing-pelles-c/</link>
      <pubDate>Thu, 16 Feb 2012 00:00:01 -0400</pubDate>
      
      <guid>https://d-apps.com/posts/installing-pelles-c/</guid>
      <description>Note: This post is part of the BCX Getting Started Guide 3.
Once BCX converts the BCX BASIC source code to C, it will need to be compiled using a C/C++ compiler. For this guide, we will be using the Pelles C development kit.
Pelles C is a complete development kit for Windows and Windows Mobile. It contains among other things an optimizing C compiler, a macro assembler, a linker, a resource compiler, a message compiler, a make utility and install builders for both Windows and Windows Mobile.</description>
    </item>
    
    <item>
      <title>BCX Getting Started Guide</title>
      <link>https://d-apps.com/posts/bcx-getting-started-guide/</link>
      <pubDate>Thu, 16 Feb 2012 00:00:00 -0400</pubDate>
      
      <guid>https://d-apps.com/posts/bcx-getting-started-guide/</guid>
      <description>Note: This post is part of the BCX Getting Started Guide 3.
It has been over 10 years since the BCX Getting Started Guide has been updated. Instead of having to wait another 10 years for a compiled HTML Help version of the documentation, everything will be made available as posts on this website.
There will be a few tweaks here and there, but there are no new example code. Most of the references for compiling the example code will now refer to the Pelles C Compiler, which is the compiler of choice for BCX.</description>
    </item>
    
    <item>
      <title>Dialog Converter 3.4</title>
      <link>https://d-apps.com/posts/dialog-converter-34/</link>
      <pubDate>Sat, 29 Oct 2011 00:00:00 -0400</pubDate>
      
      <guid>https://d-apps.com/posts/dialog-converter-34/</guid>
      <description>While working on the BCX Getting Started Guide 3, I ran into an issue while compiling the example source code for Dialog Converter against Pelles C. When using Dialog Converter with the /l1 expand function names switch, it defines WinMain as int instead of int WINAPI.
Change log:
Added return type for WinMain when using /l1 option Updated build.bat to use Pelles C instead of LCC-Win32 Added blank afxres.h for vc example Download</description>
    </item>
    
    <item>
      <title>Didn&#39;t pay the bills!</title>
      <link>https://d-apps.com/posts/test-post/</link>
      <pubDate>Thu, 06 Oct 2011 00:00:00 -0400</pubDate>
      
      <guid>https://d-apps.com/posts/test-post/</guid>
      <description>Need to restore code from backups someday. Some of the older code may not be restored. BCX code is available here.
Looking for D-Color XP (mentioned on LifeHacker, Shell Extension City, Softpedia, Windows 100%)? It is available at Softpedia.com.</description>
    </item>
    
  </channel>
</rss>
